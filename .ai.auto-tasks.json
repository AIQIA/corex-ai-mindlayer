[
    {
        "task": "Validate .ai.json if updated and adapt the schema.js to the new .ai.json if necessary, then trigger the command: npm run validate",
        "trigger": "pre-commit",
        "command": "npm run validate",
        "priority": "high",
        "automated": true,
        "handler": "ai-assistant",
        "onError": "block-commit"
    },

    {
        "task": "Sync Documentation",
        "trigger": "post-update",
        "command": "ai-sync-docs",
        "priority": "medium",
        "automated": true,
        "onError": "log",
        "handler": "ai-assistant",
        "aiConfig": {
            "type": "documentation-sync",
            "files": ["*.md"],
            "updateStrategy": "intelligent",
            "context": {
                "project": true,
                "changes": true,
                "version": true
            }
        }
    },
    {
        "task": "Update Context",
        "trigger": "post-copilot-chat",
        "command": "aiMindLayer.updateContext",
        "priority": "high",
        "automated": true,
        "dependencies": ["aim-context.json"],
        "onError": "log"
    },
    {
        "task": "Check Documentation Redundancy",
        "trigger": "pre-commit",
        "command": "ai-sync-docs --check-redundancy",
        "priority": "high",
        "automated": true,
        "onError": "block-commit",
        "handler": "ai-assistant",
        "description": "Ensures all .md files from root directory (except those in .ai.json.ignore) maintain absolute redundancy"
    },
    {
        "task": "Validate .gitignore",
        "trigger": "pre-commit",
        "command": "php scripts/validate-gitignore.php",
        "priority": "high",
        "automated": true,
        "onError": "block-commit",
        "description": "Prüft .gitignore auf Aktualität und stellt sicher, dass keine unnötigen Dateien (wie Backups) auf Git hochgeladen werden",
        "rules": [
            "Alle Backup-Verzeichnisse müssen ausgeschlossen sein",
            "Temporäre Dateien müssen ausgeschlossen sein",
            "Lokale Konfigurationsdateien müssen ausgeschlossen sein",
            "Build-Artefakte müssen ausgeschlossen sein"
        ],
        "criticalPaths": [
            "/backups/",
            "*.bak",
            "*.swp",
            "*.orig",
            "*~",
            ".backup/",
            "_backup/"
        ]
    },
    {
        "task": "Post-Update Validation",
        "trigger": "post-update",
        "command": "php scripts/ValidationRunner.php",
        "priority": "critical",
        "automated": true,
        "onError": "block-push",
        "description": "Führt umfassende Validierung nach Software-Updates durch",
        "validations": [
            "Schema-Validierung der .ai.json und aller Module",
            "Code-Linting für PHP Files",
            "Unit Tests",
            "Integration Tests",
            "Dokumentations-Konsistenz"
        ],
        "dependencies": [
            "composer.json",
            "package.json",
            "schema.json",
            ".ai.json"
        ],
        "errorHandling": {
            "action": "block-push",
            "notification": true,
            "logFile": "logs/validation-errors.log",
            "generateReport": true
        }
    }
]

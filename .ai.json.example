{
    "meta": {
        "project": "Beispiel Projekt",
        "version": "1.0.1",
        "author": "Dein Name oder Organisation",
        "description": "Kurzbeschreibung dieses Beispielprojekts",
        "created": "2025-01-01",
        "updated": "2025-07-09"
    },
    "architecture": [
        {
            "module": "Authentifizierung",
            "description": "Benutzer-Login und Session-Management",
            "entrypoints": ["login.php", "auth.js"],
            "routes": ["/login", "/register", "/logout"],
            "dependencies": ["SessionManager", "UserModel"]
        },
        {
            "module": "Dashboard",
            "description": "Hauptbenutzeroberfläche nach dem Login",
            "entrypoints": ["dashboard.php", "dashboard.vue"],
            "routes": ["/dashboard", "/admin"],
            "dependencies": ["Authentifizierung"]
        }
    ],
    "errors": [
        {
            "code": "AUTH_FAILED",
            "message": "Authentifizierung fehlgeschlagen",
            "causes": ["Falsche Anmeldedaten", "Session abgelaufen"],
            "solutions": ["Anmeldedaten prüfen", "Neu anmelden"],
            "severity": "medium"
        },
        {
            "code": "DB_CONNECTION",
            "message": "Datenbankverbindung fehlgeschlagen",
            "causes": ["Server nicht erreichbar", "Falsche Credentials"],
            "solutions": ["Verbindung prüfen", "Credentials validieren"],
            "severity": "high"
        }
    ],
    "tasks": [
        {
            "task": "Passwort-Reset-Funktion implementieren",
            "priority": "high",
            "status": "open",
            "relatedModules": ["Authentifizierung"],
            "due": "2025-12-31",
            "tags": ["security", "user-management"]
        },
        {
            "task": "Dashboard Performance optimieren",
            "priority": "medium",
            "status": "in-progress",
            "relatedModules": ["Dashboard"],
            "due": "2025-08-15",
            "tags": ["performance", "ui"]
        }
    ],
    "context": [
        {
            "key": "Framework",
            "value": "Das Projekt verwendet Laravel mit Vue.js Frontend",
            "category": "technology"
        },
        {
            "key": "Database",
            "value": "MySQL 8.0 mit Redis für Caching",
            "category": "infrastructure"
        }
    ],
    "references": [
        {
            "type": "doc",
            "label": "AI Integration Guide",
            "url": "./AI-INTEGRATION.md",
            "description": "Anleitung zur Integration von AI-Tools"
        },
        {
            "type": "api",
            "label": "REST API Documentation",
            "url": "./api-docs.md",
            "description": "Vollständige API-Referenz"
        },
        {
            "type": "tag",
            "label": "@ai-docs",
            "description": "Markiert AI-lesbare Dokumentation im Code"
        }
    ],
    "user_preferences": {
        "language": "deutsch",
        "communication_style": "informell",
        "technical_depth": "mittel",
        "response_format": "mit_codebeispielen",
        "note": "Dieses Projekt wird von einem deutschsprachigen Team entwickelt"
    },
    "research": [
        {
            "name": "ML-basierte Code-Qualitätsanalyse",
            "description": "Automatische Erkennung von Code-Qualitätsmerkmalen mittels Machine Learning",
            "status": "early_prototype",
            "progress": 35,
            "technologies": ["TensorFlow.js", "CodeBERT", "TypeScript"],
            "resources": [
                {
                    "type": "paper",
                    "link": "https://arxiv.org/abs/2102.04664",
                    "description": "CodeBERT: A Pre-Trained Model for Programming and Natural Languages"
                },
                {
                    "type": "repository",
                    "link": "https://github.com/example/code-quality-ml",
                    "description": "Proof-of-concept Implementation"
                }
            ],
            "potential_impact": "Automatische Qualitätsbewertung und Verbesserungsvorschläge direkt in der IDE"
        },
        {
            "name": "Intelligente Architektur-Vorschläge",
            "description": "KI-generierte Vorschläge zur Optimierung der Projektarchitektur",
            "status": "concept",
            "progress": 15,
            "technologies": ["GPT-4", "Architectural Pattern Recognition"],
            "potential_impact": "Adaptive Architekturverbesserungen basierend auf Best Practices und Projektkontext"
        }
    ]
}

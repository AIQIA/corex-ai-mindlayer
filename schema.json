{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "$id": "https://github.com/AIQIA/corex-ai-mindlayer/schema.json",
  "title": "coreX AI MindLayer Schema",
  "description": "JSON Schema for .ai.json files used by AI assistants to understand project structure. WICHTIG: Die .ai.json ist ein dynamisches Dokument, das sich ständig weiterentwickelt. Dieses Schema muss regelmäßig angepasst werden, um neue Eigenschaften und Strukturen zu unterstützen.",
  "version": "3.8.2",
  "lastUpdated": "2025-07-20",
  "dynamicNature": {
    "description": "Die .ai.json darf und soll sich kontinuierlich weiterentwickeln",
    "requirements": [
      "Schema muss bei neuen .ai.json Eigenschaften aktualisiert werden",
      "Versionshistorie dokumentieren",
      "Abwärtskompatibilität beachten",
      "Neue Eigenschaften validieren",
      "Performance-Metriken berücksichtigen"
    ]
  },
  "performance": {
    "description": "Performance-Konfiguration und Metriken",
    "type": "object",
    "properties": {
      "storage": {
        "type": "object",
        "properties": {
          "mode": {
            "type": "string",
            "enum": ["standard", "modular", "binary", "sqlite"],
            "default": "standard",
            "description": "Speichermodus für .ai.json Daten"
          },
          "compression": {
            "type": "boolean",
            "default": false,
            "description": "Aktiviert Datenkomprimierung"
          },
          "lazyLoading": {
            "type": "boolean",
            "default": true,
            "description": "Aktiviert bedarfsgesteuertes Laden von Modulen"
          }
        }
      },
      "monitoring": {
        "type": "object",
        "properties": {
          "enabled": {
            "type": "boolean",
            "default": true,
            "description": "Aktiviert Performance-Monitoring"
          },
          "metrics": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": ["memory", "loadTime", "responseTime", "diskUsage"]
            },
            "default": ["memory", "loadTime"]
          }
        }
      }
    }
  },
  "type": "object",
  "required": ["$schema", "$modules"],
  "properties": {
    "$schema": {
      "type": "string",
      "description": "Path to the JSON schema file"
    },
    "$modules": {
      "type": "array",
      "description": "List of modules to include",
      "items": {
        "type": "object",
        "required": ["name", "$ref"],
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the module"
          },
          "$ref": {
            "type": "string",
            "description": "Path to the module file"
          },
          "loadPriority": {
            "type": "string",
            "enum": ["high", "medium", "low"],
            "default": "medium",
            "description": "Priorität beim Laden des Moduls"
          }
        }
      }
    },
    "contextManagement": {
      "type": "object",
      "description": "Konfiguration für optionales Kontext-Management",
      "required": ["enabled"],
      "properties": {
        "enabled": {
          "type": "boolean",
          "default": false,
          "description": "Aktiviert das erweiterte Kontext-Management"
        },
        "mode": {
          "type": "string",
          "enum": ["full", "smart", "minimal", "initialText"],
          "default": "smart",
          "description": "Kontext-Management Modus"
        },
        "resources": {
          "type": "object",
          "properties": {
            "maxMemoryUsage": {
              "type": "string",
              "pattern": "^\\d+[MG]B$",
              "default": "512MB",
              "description": "Maximaler Speicherverbrauch für Kontext"
            },
            "cleanupInterval": {
              "type": "string",
              "pattern": "^\\d+[hd]$",
              "default": "24h",
              "description": "Intervall für Kontext-Bereinigung"
            }
          }
        },
        "initialization": {
          "type": "object",
          "properties": {
            "useInitialText": {
              "type": "boolean",
              "default": true,
              "description": "Verwendet Initial-Text statt vollem Kontext"
            },
            "smartMode": {
              "type": "boolean",
              "default": true,
              "description": "Automatische Anpassung basierend auf Performance"
            }
          }
        }
      }
    },
    "architecture": {
      "type": "array",
      "description": "Project architecture components",
      "items": {
        "type": "object",
        "required": ["module", "description"],
        "properties": {
          "module": {
            "type": "string",
            "description": "Name of the architecture module"
          },
          "description": {
            "type": "string",
            "description": "Description of the module"
          },
          "entrypoints": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "dependencies": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "features": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "commands": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "jobs": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      }
    },
    "errors": {
      "type": "array",
      "description": "Error definitions",
      "items": {
        "type": "object",
        "required": ["code", "message"],
        "properties": {
          "code": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "causes": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "solutions": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "severity": {
            "type": "string",
            "enum": ["low", "medium", "high", "critical"]
          },
          "path": {
            "type": "string"
          }
        }
      }
    },
    "auto_tasks": {
      "type": "object",
      "properties": {
        "path": {
          "type": "string"
        },
        "triggers": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "documentation_sync": {
          "type": "object",
          "properties": {
            "enabled": {
              "type": "boolean"
            },
            "priority": {
              "type": "string"
            },
            "description": {
              "type": "string"
            },
            "watch_patterns": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "rules": {
              "type": "object"
            },
            "sync_behavior": {
              "type": "object"
            },
            "validation": {
              "type": "object"
            },
            "conflict_resolution": {
              "type": "object"
            },
            "notifications": {
              "type": "object"
            }
          }
        }
      }
    },
    "tasks": {
      "type": "array",
      "items": {
        "type": "object",
        "required": ["task", "priority", "status"],
        "properties": {
          "task": {
            "type": "string"
          },
          "priority": {
            "type": "string",
            "enum": ["low", "medium", "high", "critical"]
          },
          "status": {
            "type": "string",
            "enum": ["open", "in-progress", "completed", "blocked"]
          },
          "relatedModules": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "due": {
            "type": "string",
            "format": "date"
          }
        }
      }
    },
    "context": {
      "type": "array",
      "items": {
        "type": "object",
        "required": ["key", "value"],
        "properties": {
          "key": {
            "type": "string"
          },
          "value": {
            "type": "string"
          }
        }
      }
    },
    "references": {
      "type": "array",
      "items": {
        "type": "object",
        "required": ["type", "label"],
        "properties": {
          "type": {
            "type": "string"
          },
          "label": {
            "type": "string"
          },
          "url": {
            "type": "string"
          },
          "description": {
            "type": "string"
          }
        }
      }
    },
    "project": {
      "type": "string",
      "description": "Project identifier"
    },
    "user_preferences": {
      "type": "object",
      "properties": {
        "language": {
          "type": "string"
        },
        "communication_style": {
          "type": "string"
        },
        "technical_depth": {
          "type": "string"
        },
        "response_format": {
          "type": "string"
        },
        "interaction_rules": {
          "type": "object"
        },
        "code_quality_requirements": {
          "type": "object"
        },
        "note": {
          "type": "string"
        }
      }
    },
    "learning_experiences": {
      "type": "object",
      "properties": {
        "workflow_optimizations": {
          "type": "array",
          "items": {
            "type": "object",
            "required": ["id", "date", "type", "title", "description"],
            "properties": {
              "id": {
                "type": "string"
              },
              "date": {
                "type": "string",
                "format": "date"
              },
              "type": {
                "type": "string"
              },
              "title": {
                "type": "string"
              },
              "description": {
                "type": "string"
              },
              "context": {
                "type": "object"
              },
              "references": {
                "type": "object"
              },
              "best_practices": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          }
        },
        "metrics": {
          "type": "object"
        }
      }
    }
  }
}
